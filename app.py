
import streamlit as st
from datetime import datetime

st.set_page_config(page_title="ุฑุญูุฉ ุงูุฒูู ุงูููููุงุฆูุฉ", layout="centered")

# --- Data: Stations (scripted "AI" responses & quiz) ---
STATIONS = [
    {
        "year": "800s (ุงูุฎูููุงุก ุงูุฅุณูุงููุฉ)",
        "scientist": "ุฌุงุจุฑ ุจู ุญูุงู",
        "intro": "ุฃููุงู ุจู ูู ูุฎุชุจุฑ ุงูุฎูููุงุฆู! ุฃูุง ุฌุงุจุฑ ุจู ุญูุงูุ ุฃุจุญุซ ุนู ุทุฑู ูุชุญููู ุงูููุงุฏ ูููู ุงูุชูุงุนูุงุช.",
        "talk": [
            "ูู ุนุตุฑูุง ููุง ููุฌุฑู ุชุฌุงุฑุจ ุนูู ุงูุชูุทูุฑ ูุงูุชุณุฎูู ูุงุณุชุฎุฑุงุฌ ุงูููุงุฏ.",
            "ุงูููููุงุก ูุงูุช ูุฑูุจุฉ ูู ุงูููุณูุฉ ูุงูุทุจ โ ููุง ูุญุงูู ููู ุฎูุงุต ุงูููุงุฏ.",
        ],
        "quiz": {
            "question": "ูุง ุงุณู ุฃุฏุงุฉ ูุงู ุงูุฎูููุงุฆููู ูุณุชุฎุฏููููุง ููุตู ุงูุณูุงุฆู ุนุจุฑ ุงูุชุณุฎูู ูุงูุชูุซููุ",
            "answer": "ุงูุชูุทูุฑ"
        }
    },
    {
        "year": "1660s",
        "scientist": "ุฑูุจุฑุช ุจููู",
        "intro": "ุฃูุง ุฑูุจุฑุช ุจูููุ ุฃุญุจ ุงูุชุฌุงุฑุจ ูุงูููุงุณ. ุฃูุนุชุจุฑ ุฃุญุฏ ูุคุณุณู ุงูููููุงุก ุงูุญุฏูุซุฉ.",
        "talk": [
            "ูุงููู ุจููู ูุตู ุนูุงูุฉ ุถุบุท ุงูุบุงุฒ ุจุญุฌูู ุนูุฏ ุซุจูุช ุฏุฑุฌุฉ ุงูุญุฑุงุฑุฉ.",
            "ูุคูู ุจุงูุชุฌุฑุจุฉ ุงูุฏูููุฉ ูุงูููุงุณ ูุชุญุฏูุฏ ููุงููู ุงูุทุจูุนุฉ."
        ],
        "quiz": {
            "question": "ูุงุฐุง ูุตู ูุงููู ุจูููุ (ุงุฎุชุฑ: ุฃ- ุนูุงูุฉ ุงูุถุบุท ุจุงูุญุฌูุ ุจ- ูุงููู ุงูุญุฑูุฉุ ุฌ- ุชุฑููุจ ุงูุฐุฑุฉ)",
            "answer": "ุฃ"
        }
    },
    {
        "year": "1803",
        "scientist": "ุฌูู ุฏุงูุชูู",
        "intro": "ุฃูุง ุฌูู ุฏุงูุชููุ ุงูุชุฑุญุช ููุฑุฉ ุฃู ุงููุงุฏุฉ ููููุฉ ูู ุฐุฑุงุช ุตุบูุฑุฉ.",
        "talk": [
            "ููุฑุฉ ุงูุฐุฑุงุช ุณุงุนุฏุช ุนูู ุชูุณูุฑ ูุณุจ ุงูุชุฑุงููุจ ุงูููููุงุฆูุฉ.",
            "ุชุฎูู ุฃู ูู ุนูุตุฑ ูู ููุน ูู ุงูุฌุณููุงุช ุงูุตุบูุฑุฉ (ุงูุฐุฑุงุช)."
        ],
        "quiz": {
            "question": "ูุง ุงูุฐู ุงูุชุฑุญู ุฏุงูุชูู ุนู ุงููุงุฏุฉุ",
            "answer": "ุงูุฐุฑุงุช"
        }
    },
    {
        "year": "1869",
        "scientist": "ุฏูููุชุฑู ููุฏููู",
        "intro": "ุฃูุง ููุฏูููุ ุฑุชุจุช ุงูุนูุงุตุฑ ูู ุฌุฏูู ุฏูุฑู ูุจูุฑ ููุธูุฑ ุฎูุงุตูุง ูุชุดุงุจูุฉ.",
        "talk": [
            "ุชุฑุชูุจู ุณูุญ ุจุชููุน ุนูุงุตุฑ ูู ุชููุชุดู ุจุนุฏ โ ุชุฑูุช ูุฑุงุบุงุช.",
            "ุงูุฌุฏูู ุงูุฏูุฑู ููุณูู ุฑุคูุฉ ุงูุฃููุงุท ุจูู ุงูุนูุงุตุฑ."
        ],
        "quiz": {
            "question": "ูุง ุงููุงุฆุฏุฉ ูู ุชุฑู ูุฑุงุบุงุช ูู ุงูุฌุฏูู ุงูุฏูุฑู ุงูุฐู ุฃูุดุฃุชู ููุฏูููุ",
            "answer": "ุชูููุน ุนูุงุตุฑ ุฌุฏูุฏุฉ"
        }
    },
    {
        "year": "1897",
        "scientist": "ุฌ.ุฌ. ุทููุณูู",
        "intro": "ุฃูุง ุทููุณููุ ุงูุชุดูุช ุงูุฅููุชุฑูู ูุฃุนุฏุช ุงูุชูููุฑ ูู ุจููุฉ ุงูุฐุฑุฉ.",
        "talk": [
            "ุงูุชุดุงู ุงูุฅููุชุฑูู ุจููู ุฃู ููุฐุฑุฉ ุฃุฌุฒุงุก ุฃุตุบุฑ.",
            "ูุฐุง ูุชุญ ุงูุจุงุจ ูููุฒูุงุก ูููููุงุก ุงูุฐุฑุฉ ุงูุญุฏูุซุฉ."
        ],
        "quiz": {
            "question": "ูุง ุงูุฌุฒุฆ ุงูููุฌูุฏ ุฏุงุฎู ุงูุฐุฑุฉ ุงูุฐู ุงูุชุดูู ุทููุณููุ",
            "answer": "ุงูุฅููุชุฑูู"
        }
    },
    {
        "year": "1903-1911",
        "scientist": "ูุงุฑู ููุฑู",
        "intro": "ุฃูุง ูุงุฑู ููุฑูุ ุฏุฑุณุช ุงููุดุงุท ุงูุฅุดุนุงุนู ููุฒุช ุจุฌุงุฆุฒุฉ ููุจู.",
        "talk": [
            "ุนููุช ุนูู ุนูุงุตุฑ ูุดุนุฉ ูุซู ุงูุฑุงุฏููู ูุงูุจููููููู.",
            "ุงูุจุญุซ ุงูุนููู ูุชุทูุจ ุดุฌุงุนุฉ ูุตุจุฑูุง ุทูููุงู."
        ],
        "quiz": {
            "question": "ุจุฃู ูุฌุงู ุญุตูุช ูุงุฑู ููุฑู ุนูู ุฌุงุฆุฒุฉ ููุจูุ (ุงุฎุชุฑ: ุฃ- ุงูููููุงุกุ ุจ- ุงูุฃุฏุจุ ุฌ- ุงูุฑูุงุถูุงุช)",
            "answer": "ุฃ"
        }
    }
]

# --- Helpers ---
def reset():
    st.session_state.stage = "intro"
    st.session_state.idx = 0
    st.session_state.score = 0
    st.session_state.history = []

if "stage" not in st.session_state:
    reset()

# --- UI ---
st.title("๐ฐ๏ธ ุฑุญูุฉ ุนุจุฑ ุงูุฒูู ูุน ุนููุงุก ุงูููููุงุก")
st.write("ูุดุงุท ุชูุงุนูู ููุฏุฑุณู ูุทูุงุจ ุงููุฏุงุฑุณ โ ุชุญุฏุซ ูุน ุนููุงุก ูู ุนุตูุฑ ูุฎุชููุฉุ ุฃุฌุจ ุนูู ุชุญุฏูุงุชููุ ูุชูุฏูู ูู ุงูุฒูู!")

if st.session_state.stage == "intro":
    st.markdown("""
    **ุทุฑููุฉ ุงููุนุจ:**  
    - ุณุชุฒูุฑูู ูุญุทุงุช ุฒูููุฉ (ุนุตูุฑ ูุฎุชููุฉ).  
    - ูู ูู ูุญุทุฉ ุณุชูุงุจู ุนุงูููุง ูุชูุฑุฃ ููุฏูุฉ ูุตูุฑุฉ.  
    - ุชุญุฏุซ ูุน ุงูุนุงูู (ุงูุชุจ ุณุคุงูู ุฃู ุฑุฏู) ุฃู ุงุฎุชุฑ ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ ูู ุงูุชุญุฏู.  
    - ุนูุฏ ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ ุชูุชุญ ูุญุทุฉ ุฌุฏูุฏุฉ ูุชูุณุจ ููุงุท.
    """)
    col1, col2 = st.columns(2)
    with col1:
        students = st.text_input("ุฃุณูุงุก ุงูุทูุงุจ (ูุซุงู: ูุงุทูุฉุ ุนูู)", key="students")
    with col2:
        mode = st.radio("ูุถุน ุงูุชุดุบูู:", ("ูุถุน ููุจุฑูุฌ (ุจุฏูู ุฅูุชุฑูุช)", "ุงููุถุน ุงูุฐูู ูุน OpenAI (ุงุฎุชูุงุฑู)"), index=0)
    if st.button("ุงุจุฏุฃ ุงูุฑุญูุฉ"):
        st.session_state.mode = mode
        st.session_state.stage = "station"
        st.session_state.idx = 0
        st.session_state.score = 0
        st.session_state.history = []
        st.experimental_rerun()

# Station stage
if st.session_state.stage == "station":
    idx = st.session_state.idx
    station = STATIONS[idx]
    st.subheader(f"{station['scientist']} โ {station['year']}")
    st.write(station["intro"])
    st.write("**ูุงุฐุง ุชุนุฑู ุนู ูุฐุง ุงูุนุงููุ**")
    for t in station["talk"]:
        st.info(t)
    # Simple chat-like interaction (scripted)
    st.write("---")
    st.write("๐ฌ **ุชุญุฏุซ ูุน ุงูุนุงูู** (ุงูุชุจ ุณุคุงููุง ุฃู ุชุนููููุง โ ุณูุชู ุงูุฑุฏ ุจุฑุฏูุฏ ููุจุฑูุฌุฉ ุชุนููููุฉ)")
    user_msg = st.text_input("ุงูุชุจ ุฑุณุงูุชู ููุง:", key=f"user_msg_{idx}")
    if st.button("ุฃุฑุณู ุงููุญุงุฏุซุฉ", key=f"send_{idx}"):
        # generate a simple scripted reply by echoing keywords
        reply = ""
        low = user_msg.lower()
        if any(k in low for k in ["ููุงุฐุง", "ููู", "ูุง", "ูุชู", "who", "why", "how"]):
            reply = station["talk"][0]
        else:
            reply = "ุดูุฑูุง ุนูู ุชุนูููู! ูู ุชุญุจ ุฃู ุชุฌุงูุจ ุงูุชุญุฏู ุงูุขู ูุชูุชุญ ุจูุงุจุฉ ุงูุฒูู ุงูุชุงููุฉุ"
        st.session_state.history.append({"speaker": "student", "text": user_msg})
        st.session_state.history.append({"speaker": station["scientist"], "text": reply})
        st.experimental_rerun()

    # show chat history for this session
    if st.session_state.history:
        st.write("### ุณุฌู ุงููุญุงุฏุซุฉ")
        for item in st.session_state.history[-6:]:
            if item["speaker"] == "student":
                st.write(f"**ุฃูุช:** {item['text']}")
            else:
                st.write(f"**{item['speaker']}:** {item['text']}")

    st.write("---")
    st.write("๐ฏ **ุงูุชุญุฏู** โ ุฃุฌุจ ุนูู ุงูุณุคุงู ุงูุชุงูู ูุชูุชูู ูููุญุทุฉ ุงูุชุงููุฉ:")
    st.markdown(f"**{station['quiz']['question']}**")
    answer = st.text_input("ุฅุฌุงุจุชู:", key=f"answer_{idx}")
    if st.button("ุชุญูู ูู ุงูุฅุฌุงุจุฉ", key=f"check_{idx}"):
        user_ans = answer.strip()
        correct = station["quiz"]["answer"].strip()
        # Normalize simple Arabic choices
        if user_ans == "":
            st.warning("ุงูุชุจ ุฅุฌุงุจุฉ ุซู ุงุถุบุท ุชุญูู.")
        else:
            is_correct = False
            if user_ans == correct:
                is_correct = True
            else:
                # handle simple choice letters
                if user_ans.lower() in ["ุฃ", "ุง", "a", "A"] and correct.lower() in ["ุฃ", "ุง", "a"]:
                    is_correct = True
                if user_ans.lower() in ["ุจ", "b"] and correct.lower() in ["ุจ", "b"]:
                    is_correct = True
            if is_correct:
                st.success("ุฅุฌุงุจุฉ ุตุญูุญุฉ! ๐ ุชูุชุญ ุจูุงุจุฉ ุงูุฒูู...")
                st.session_state.score += 10
                st.session_state.idx += 1
                if st.session_state.idx >= len(STATIONS):
                    st.session_state.stage = "end"
                st.experimental_rerun()
            else:
                st.error("ููุฃุณูุ ูุฐู ููุณุช ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ. ุญุงูู ูุฑุฉ ุฃุฎุฑู ุฃู ุงูุฑุฃ ุญุฏูุซ ุงูุนุงูู ุฃุนูุงู.")

# End stage
if st.session_state.stage == "end":
    st.balloons()
    st.header("๐ ุชูุงูููุง โ ุงูุชูุช ุงูุฑุญูุฉ!")
    st.write(f"ุงูุฏุฑุฌุฉ ุงูููุงุฆูุฉ: **{st.session_state.score}**")
    st.write("ุฃุฎุจุฑูุง ุฃู ูุญุทุฉ ุฃุนุฌุจุชู ุฃูุซุฑ ุฃู ุงุทุจุน ุดูุงุฏุฉ ุงููุดุงุฑูุฉ.")
    name = st.text_input("ุงูุชุจ ุงุณู ุงูุทุงูุจ/ุงูุทูุงุจ ูุทุจุงุนุฉ ุงูุดูุงุฏุฉ:", key="cert_name")
    if st.button("ุทุจุงุนุฉ ุดูุงุฏุฉ ุงููุดุงุฑูุฉ"):
        if not name.strip():
            st.warning("ุงูุชุจ ุงุณููุง ูุทุจุงุนุชู ุนูู ุงูุดูุงุฏุฉ.")
        else:
            st.markdown(f"""
            ### ๐ ุดูุงุฏุฉ ูุดุงุฑูุฉ
            ูููุญ ูุฐู ุงูุดูุงุฏุฉ ุฅูู **{name}**  
            ููุดุงุฑูุชู/ูุง ูู **ุฑุญูุฉ ุงูุฒูู ุงูููููุงุฆูุฉ** ูุงูุชุนุฑู ุนูู ุนููุงุก ุงูููููุงุก.
            \n> ุงูุชุงุฑูุฎ: {datetime.now().strftime('%Y-%m-%d')}
            """)
    if st.button("ุงุจุฏุฃ ูู ุฌุฏูุฏ"):
        reset()
        st.experimental_rerun()

# Footer / credits
st.write("---")
st.write("ููุตูู ุจูุงุณุทุฉ: ูุดุงุท ุชุนูููู ุชูุงุนูู โ ูููู ุชุนุฏูู ุงูููุฏ ููุชุตู ุจูุงุฌูุฉ OpenAI API ูุฅุฌุงุจุงุช ุญููููุฉ (ุงูุธุฑ README).")
